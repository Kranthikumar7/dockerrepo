docker start [CONTAINER]
docker stop [CONTAINER]
docker restart [CONTAINER]
docker pause [CONTAINER]
docker unpause [CONTAINER]
docker wait [CONTAINER]
docker kill [CONTAINER]

List containers:
# List only active containers
-  docker ps
# List all containers
-  docker ps -a

Stop a container:
# Stop a container
- docker stop [container-name|container-id]
# Stop a container (timeout = 1 second)
- docker stop -t1

Remove a container:
# Remove a stopped container
- docker rm [container-name|container-id]
# Force stop and remove a container
- docker rm -f [container-name|container-id]
# Remove all containers
- docker rm -f $(docker ps-aq)
# Remove all stopped containers
- docker rm $(docker ps -q -f “status=exited”)

Login into the container:
- docker exec -it mycontainer /bin/bash(terminal commands)


Execute a new process in an existing container:
# Execute and access bash inside a WildFly container
- docker exec -it mywildfly bash


Run a container in detached mode:
- docker run --name mywildfly -d -p 8080:8080 jboss/wildfly.
- docker run --name containername -d -p 8080:8080 imagename

Run a detached container in a previously created container network:
- docker network create mynetwork.
- docker run --name mywildfly-net -d --net mynetwork \
  -p 8080:8080 jboss/wildfly.
  
Run a detached container mounting a local folder inside the container:
- docker run --name mywildfly-volume -d \ -v myfolder/:/opt/jboss/wildfly/standalone/deployments/ \ -p 8080:8080 jboss/wildflyjboss/wildfly.


Follow the logs of a specific container:
-  docker logs -f mywildfly.
-  docker logs -f [container-name|container-id].


Image Related Commands:-

1. Build an image using a Dockerfile:
# Build an image
-  docker build -t [username/]<image-name>[:tag] <dockerfile-path>
# Build an image called myimage using the Dockerfile in the same folder where the command was executed
-  docker build -t myimage:latest .

2. Check the history of an image:
# Check the history of the jboss/wildfly image
-  docker history jboss/wildfly
# Check the history of an image
-  docker history [username/]<image-name>[:tag]

3. List the images:
-  docker images

4. Remove an image from the local registry:
- docker rmi [username/]<image-name>[:tag]

5. Tag an image:
# Creates an image called “myimage” with the tag “v1” for the image jboss/wildfly:latest
- docker tag jboss/wildfly myimage:v1
- docker tag <image-name> <new-image-name>
- Creates a new image specifying the “new tag” from an existing image and tag
- docker tag <image-name>[:tag][username/] <new-image-name>.[:new-tag]

6. Exporting and importing an image to an external file:
# Export the image to an external file
- docker save -o <filename>.tar
# Import an image from an external file
- docker load -i <filename>.tar
7 Push an image to a registry:
- docker push [registry/][username/]<image-name>[:tag]

